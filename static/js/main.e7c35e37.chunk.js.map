{"version":3,"sources":["Coin.js","App.js","index.js"],"names":["Coin","name","image","symbol","price","volume","priceChange","marketcap","className","src","alt","toLocaleString","toFixed","App","useState","coins","setCoins","search","setSearch","useEffect","axios","get","then","res","data","catch","error","alert","filteredCoins","filter","coin","toLowerCase","includes","toLocaleLowerCase","type","placeholder","onChange","e","target","value","map","market_cap","current_price","price_change_percentage_24h","total_volume","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PAEaA,EAAO,SAAC,GAAkE,IAAjEC,EAAgE,EAAhEA,KAAMC,EAA0D,EAA1DA,MAAOC,EAAmD,EAAnDA,OAAQC,EAA2C,EAA3CA,MAAOC,EAAoC,EAApCA,OAAQC,EAA4B,EAA5BA,YAAYC,EAAgB,EAAhBA,UAClE,OACI,qBAAKC,UAAU,iBAAf,SACI,sBAAKA,UAAU,WAAf,UACI,sBAAKA,UAAU,OAAf,UACI,qBAAKC,IAAKP,EAAOQ,IAAI,WACrB,6BAAKT,IACL,oBAAGO,UAAU,cAAb,cAA6BL,EAA7B,UAEJ,sBAAKK,UAAU,YAAf,UACI,oBAAGA,UAAU,aAAb,cAA4BJ,EAA5B,OACA,oBAAGI,UAAU,cAAb,eAA8BH,EAAOM,oBACpCL,EAAc,EACX,oBAAGE,UAAU,mBAAb,UAAkCF,EAAYM,QAAQ,GAAtD,QACC,oBAAGJ,UAAU,qBAAb,UAAoCF,EAAYM,QAAQ,GAAxD,QAEL,oBAAGJ,UAAU,iBAAb,wBACgBD,EAAUI,6B,MC4C/BE,MAvDf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNC,EADM,KACCC,EADD,OAEeF,mBAAS,IAFxB,mBAENG,EAFM,KAEEC,EAFF,KAIbC,qBAAU,WACRC,IAAMC,IAAI,4HACPC,MAAK,SAAAC,GACJP,EAASO,EAAIC,SAEZC,OAAM,SAAAC,GAAK,OAAIC,MAAM,kBACzB,IAEH,IAGMC,EAAgBb,EAAMc,QAAO,SAAAC,GAAI,OACrCA,EAAK7B,KAAK8B,cAAcC,SAASf,EAAOgB,wBAI1C,OACE,sBAAKzB,UAAU,WAAf,UACE,sBAAKA,UAAU,cAAf,UACE,oBAAIA,UAAU,YAAd,+BACA,+BACE,uBAAO0B,KAAK,OACVC,YAAY,SACZ3B,UAAU,aACV4B,SAhBW,SAAAC,GACnBnB,EAAUmB,EAAEC,OAAOC,eAmBhBX,EAAcY,KAAI,SAAAV,GAAS,IAAD,EACzB,OACE,cAAC,GAAD,GAEE7B,KAAM6B,EAAK7B,KACXC,MAAO4B,EAAK5B,MACZE,MAAO0B,EAAK1B,MACZD,OAAQ2B,EAAK3B,OACbI,UAAWuB,EAAKW,YANlB,sBAOSX,EAAKY,eAPd,4BAQeZ,EAAKa,6BARpB,uBASWb,EAAKc,cAThB,GACOd,EAAKe,WCtCtBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e7c35e37.chunk.js","sourcesContent":["import React from 'react'\n\nexport const Coin = ({name, image, symbol, price, volume, priceChange,marketcap }) => {\n    return (\n        <div className=\"coin-container\">\n            <div className=\"coin-row\">\n                <div className=\"coin\">\n                    <img src={image} alt=\"crypto\" />\n                    <h1>{name}</h1>\n                    <p className=\"coin-symbol\"> {symbol} </p>\n                </div>\n                <div className=\"coin-data\">\n                    <p className=\"coin-price\">${price} </p>\n                    <p className=\"coin-volume\"> ${volume.toLocaleString()}</p>\n                    {priceChange < 0 ? (\n                        <p className=\"coin-percent red\">{ priceChange.toFixed(2) } %</p>\n                    ) : (<p className=\"coin-percent green\">{ priceChange.toFixed(2) } %</p>)\n                    }\n                    <p className=\"coin-marketcap\">\n                        Mkt Cap : ${marketcap.toLocaleString()}\n                    </p>\n                </div>\n            </div>\n        </div>\n    )\n}\n","\nimport React, {useState, useEffect} from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport { Coin } from './Coin';\nimport './Coin.css';\n\n\nfunction App() {\n  const [coins, setCoins] = useState([]);\n  const [search, setSearch] = useState('');\n\n  useEffect(() => {\n    axios.get('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false')\n      .then(res => {\n        setCoins(res.data)\n        \n      }).catch(error => alert('You error'));\n  }, []);\n\n  const handleChange = e => {\n    setSearch(e.target.value)\n  }\n  const filteredCoins = coins.filter(coin =>\n    coin.name.toLowerCase().includes(search.toLocaleLowerCase())\n    \n    )\n\n  return (\n    <div className=\"coin-app\">\n      <div className=\"coin-search\">\n        <h1 className=\"coin-text\">Search a currency</h1>\n        <form>\n          <input type=\"text\"\n            placeholder=\"Search\"\n            className=\"coin-input\"\n            onChange={handleChange}\n          />\n        </form>\n      </div>\n      {filteredCoins.map(coin => {\n        return (\n          <Coin\n            key={coin.id}\n            name={coin.name}\n            image={coin.image}\n            price={coin.price}\n            symbol={coin.symbol}\n            marketcap={coin.market_cap}\n            price={coin.current_price}\n            priceChange={coin.price_change_percentage_24h}\n            volume ={coin.total_volume}\n          >\n            \n            </Coin>\n        )\n        \n      })}\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}